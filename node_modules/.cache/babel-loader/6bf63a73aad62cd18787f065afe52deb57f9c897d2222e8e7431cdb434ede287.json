{"ast":null,"code":"const useIntersectionObserver = (callback, options) => {\n  // sometimes, I hate TS.\n  let observer = options ? new IntersectionObserver(callback, options) : new IntersectionObserver(callback);\n  return observer;\n};\nexport default useIntersectionObserver;","map":{"version":3,"names":["useIntersectionObserver","callback","options","observer","IntersectionObserver"],"sources":["/Users/kayy/Library/CloudStorage/OneDrive-Personal/Documents/Code Projects/Portfolio/client/src/common/IntersectionObserver.tsx"],"sourcesContent":["\n\nexport type Options = {\n    root? : HTMLElement | null,\n    rootMargin? : string,\n    threshold? : number | Array<number>,\n}\n\nconst useIntersectionObserver = ( callback: Function | any, options?: Options ) : IntersectionObserver => {\n    // sometimes, I hate TS.\n    let observer = options ? new IntersectionObserver(callback, options) : new IntersectionObserver(callback) ;\n    return observer ;\n} ;\n\n\nexport default useIntersectionObserver"],"mappings":"AAQA,MAAMA,uBAAuB,GAAG,CAAEC,QAAwB,EAAEC,OAAiB,KAA6B;EACtG;EACA,IAAIC,QAAQ,GAAGD,OAAO,GAAG,IAAIE,oBAAoB,CAACH,QAAQ,EAAEC,OAAO,CAAC,GAAG,IAAIE,oBAAoB,CAACH,QAAQ,CAAC;EACzG,OAAOE,QAAQ;AACnB,CAAC;AAGD,eAAeH,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
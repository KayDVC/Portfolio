{"ast":null,"code":"var _jsxFileName = \"/Users/kayy/Library/CloudStorage/OneDrive-Personal/Documents/Code Projects/Portfolio/src/pages/components/small/TextContainer.tsx\";\nimport { memo } from 'react';\n\n/**\n *   @details : Creates a flexible container for text (and other content). \n * \n *   @Required\n *   @param[in] id:             unique identifier for the section.\n * \n *   @Optional\n *   @param[in] children: other html/react elements to be displayed within container.\n *   @param[in] extra_styles: extra styles to be applied to the text container. These should be passed as a single string or string literal.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextContainer = _ref => {\n  let {\n    id,\n    children,\n    extra_styles\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `textbox-container text ${extra_styles === undefined ? '' : extra_styles}`,\n    id: id ? id : '',\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = TextContainer;\nexport default _c2 = /*#__PURE__*/memo(TextContainer);\nvar _c, _c2;\n$RefreshReg$(_c, \"TextContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","TextContainer","id","children","extra_styles","undefined"],"sources":["/Users/kayy/Library/CloudStorage/OneDrive-Personal/Documents/Code Projects/Portfolio/src/pages/components/small/TextContainer.tsx"],"sourcesContent":["import { memo } from 'react' ;\n\n/**\n *   @details : Creates a flexible container for text (and other content). \n * \n *   @Required\n *   @param[in] id:             unique identifier for the section.\n * \n *   @Optional\n *   @param[in] children: other html/react elements to be displayed within container.\n *   @param[in] extra_styles: extra styles to be applied to the text container. These should be passed as a single string or string literal.\n */\n\ntype Props = {\n    id?: string,\n    extra_styles?: string,\n    children?: React.ReactNode;\n}\n\nconst TextContainer = ({ id, children, extra_styles }: Props) => {\n    return (\n        <div className={`textbox-container text ${extra_styles === undefined ? '' : extra_styles}`} id={id? id : ''}>\n            {children}\n        </div>\n    )\n}\n\nexport default memo(TextContainer)"],"mappings":";AAAA,SAASA,IAAI,QAAQ,OAAO;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAiBA,MAAMC,aAAa,GAAG,QAA2C;EAAA,IAA1C;IAAEC,EAAE;IAAEC,QAAQ;IAAEC;EAAoB,CAAC;EACxD,oBACI;IAAK,SAAS,EAAG,0BAAyBA,YAAY,KAAKC,SAAS,GAAG,EAAE,GAAGD,YAAa,EAAE;IAAC,EAAE,EAAEF,EAAE,GAAEA,EAAE,GAAG,EAAG;IAAA,UACvGC;EAAQ;IAAA;IAAA;IAAA;EAAA,QACP;AAEd,CAAC;AAAA,KANKF,aAAa;AAQnB,kCAAeD,IAAI,CAACC,aAAa,CAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/kayy/Library/CloudStorage/OneDrive-Personal/Documents/Code Projects/Portfolio/client/src/pages/components/large/Header.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, memo } from 'react';\nimport Graphic from '../small/Graphic';\nimport { Size } from '../../../common/types';\nimport NavMenu from '../small/NavMenu';\nimport ThemeSwitcher from '../small/ThemeSwitcher';\nimport ScrollLock from '../small/ScrollLock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  // add mobile menu\n  const [menuTrigger, setMenuTrigger] = useState(false);\n  const [clicked, setClicked] = useState(false);\n  const handleClick = () => {\n    setClicked(prevState => {\n      return !prevState;\n    });\n  };\n  const blurBackground = blur => {\n    let bg = document.getElementById('PageContent');\n    if (bg != null) {\n      bg.style.filter = blur ? 'blur(10px)' : 'blur(0)';\n    }\n  };\n  const handleMenuToggle = () => {\n    setMenuTrigger(!menuTrigger);\n    blurBackground(!menuTrigger);\n  };\n\n  // revert any changes if screen size is changed from mobile to 'large' (screen width >640px).\n  const [lastWidth, setLastWidth] = useState(0);\n  useEffect(() => {\n    var _visualViewport2;\n    let threshold = 640;\n    const revertMobileChanges = () => {\n      var _visualViewport;\n      let currWidth = (_visualViewport = visualViewport) === null || _visualViewport === void 0 ? void 0 : _visualViewport.width;\n\n      // only run when going from mobile to larger.\n      if (lastWidth <= threshold) {\n        // revert menu toggle and background blur to default values.\n        if (currWidth !== undefined && currWidth > threshold) {\n          blurBackground(false);\n          setMenuTrigger(false);\n        }\n      }\n      setLastWidth(currWidth !== undefined ? currWidth : 0);\n    };\n    (_visualViewport2 = visualViewport) === null || _visualViewport2 === void 0 ? void 0 : _visualViewport2.addEventListener(\"resize\", revertMobileChanges);\n    return () => {\n      var _visualViewport3;\n      return (_visualViewport3 = visualViewport) === null || _visualViewport3 === void 0 ? void 0 : _visualViewport3.removeEventListener(\"resize\", revertMobileChanges);\n    };\n  }, [lastWidth]);\n\n  // add (dis)appearing effect.\n  const [toggle, setToggle] = useState(null);\n  useEffect(() => {\n    // save last page pos; 0 on page load.\n    let lastPos = window.pageYOffset;\n\n    // only toggle header when 15 or more pixels have been scrolled.\n    let threshold = 5;\n    const getScrollDir = () => {\n      let currPos = window.pageYOffset;\n\n      // user scrolling down ? Don't show header.\n      let showHeader = currPos > lastPos ? false : true;\n\n      // user scrolling in a direction already detected? Don't update.\n      if (showHeader !== toggle && (lastPos - currPos > threshold || currPos - lastPos > threshold)) {\n        setToggle(showHeader);\n      } else if (currPos === 0) {\n        setToggle(true);\n      }\n      lastPos = currPos;\n    };\n    document.addEventListener(\"scroll\", getScrollDir);\n\n    // remove EL as part of cleanup\n    return () => document.removeEventListener(\"scroll\", getScrollDir);\n  }, [toggle]); // prevent element reloads when toggle changed.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `header outer ${toggle ? 'show' : toggle !== null ? 'hide' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logocard\",\n        children: /*#__PURE__*/_jsxDEV(Graphic, {\n          size: Size.Large,\n          graphic_src: '/logos/personal_logo.png',\n          disable_inversion: true,\n          desc: \"My Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"general-flex parent-height\",\n        children: [/*#__PURE__*/_jsxDEV(NavMenu, {\n          menuTrigger: menuTrigger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"general-flex\",\n          id: \"Interactables\",\n          children: [/*#__PURE__*/_jsxDEV(ThemeSwitcher, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"menu toggle\",\n            onClick: () => {\n              handleClick();\n              handleMenuToggle();\n            },\n            children: !menuTrigger ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"parent-height\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `x-mark graphic medium invert ${clicked ? 'rotateRight' : 'sideways'}`,\n                onAnimationEnd: handleClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"parent-height\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `x-mark graphic medium invert ${clicked ? 'rotateLeft' : 'straight'}`,\n                onAnimationEnd: handleClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ScrollLock, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"uAdkD0RcI4Hr17EXDcKEYIJmU1Q=\");\n_c = Header;\nexport default _c2 = /*#__PURE__*/memo(Header);\nvar _c, _c2;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","memo","Graphic","Size","NavMenu","ThemeSwitcher","ScrollLock","Header","menuTrigger","setMenuTrigger","clicked","setClicked","handleClick","prevState","blurBackground","blur","bg","document","getElementById","style","filter","handleMenuToggle","lastWidth","setLastWidth","threshold","revertMobileChanges","currWidth","visualViewport","width","undefined","addEventListener","removeEventListener","toggle","setToggle","lastPos","window","pageYOffset","getScrollDir","currPos","showHeader","Large"],"sources":["/Users/kayy/Library/CloudStorage/OneDrive-Personal/Documents/Code Projects/Portfolio/client/src/pages/components/large/Header.tsx"],"sourcesContent":["import React, { useEffect, useState, memo } from 'react'\nimport Graphic from '../small/Graphic' ;\nimport { Size } from '../../../common/types'\nimport NavMenu from '../small/NavMenu' ;\nimport ThemeSwitcher from '../small/ThemeSwitcher' ;\nimport ScrollLock from '../small/ScrollLock' ;\n\n\nconst Header = () => {\n\n    // add mobile menu\n    const [menuTrigger, setMenuTrigger] = useState(false) ;\n    const [clicked, setClicked] = useState(false) ;\n\n    const handleClick = () => {\n        setClicked(prevState => {\n            return !prevState\n        })\n    }\n    const blurBackground = (blur:boolean) => {\n        let bg = document.getElementById('PageContent') ;\n\n        if (bg != null){\n            bg.style.filter = blur? 'blur(10px)' : 'blur(0)' ;\n        }\n    }\n\n    const handleMenuToggle = () => {\n        setMenuTrigger(!menuTrigger) ;\n\n        blurBackground(!menuTrigger) ;\n    }\n\n    // revert any changes if screen size is changed from mobile to 'large' (screen width >640px).\n    const [lastWidth, setLastWidth] = useState(0) ;\n    useEffect(() => {\n        let threshold = 640 ;\n\n        const revertMobileChanges = () => {\n\n            let currWidth = visualViewport?.width ;\n\n            // only run when going from mobile to larger.\n            if (lastWidth <= threshold){\n                // revert menu toggle and background blur to default values.\n                if ( currWidth !== undefined && currWidth > threshold){\n                    blurBackground(false) ;\n                    setMenuTrigger(false) ;\n                }\n            }   \n            setLastWidth(currWidth !== undefined ? currWidth : 0) ;\n        }\n    \n        visualViewport?.addEventListener(\"resize\", revertMobileChanges) ;\n\n        return ( () => visualViewport?.removeEventListener(\"resize\", revertMobileChanges)) ;\n    }, [lastWidth]) ;\n    \n\n    // add (dis)appearing effect.\n    const [toggle, setToggle] = useState<boolean | null>(null) ;\n\n    useEffect(() => {\n\n        // save last page pos; 0 on page load.\n        let lastPos = window.pageYOffset ;\n\n        // only toggle header when 15 or more pixels have been scrolled.\n        let threshold = 5 ;\n\n        const getScrollDir = () => {\n            let currPos = window.pageYOffset ;\n\n            // user scrolling down ? Don't show header.\n            let showHeader = currPos > lastPos ? false : true ;\n\n            // user scrolling in a direction already detected? Don't update.\n            if ( showHeader !== toggle && ( \n                (lastPos - currPos > threshold) || (currPos - lastPos > threshold)))\n            {\n                setToggle(showHeader) ;\n            } else if (currPos === 0) {\n                setToggle(true) ;\n            }\n\n            lastPos = currPos ;\n        } ;\n\n        document.addEventListener(\"scroll\", getScrollDir) ;\n\n        // remove EL as part of cleanup\n        return (() => document.removeEventListener(\"scroll\", getScrollDir)) ;\n    }, [ toggle ] ) ; // prevent element reloads when toggle changed.\n\n    return (\n        <div className={`header outer ${toggle? 'show' : toggle!== null ? 'hide' : ''}`}>\n            <div className='inner'>\n                <div className='logocard'>\n                    <Graphic size={Size.Large} graphic_src={'/logos/personal_logo.png'} disable_inversion={true} desc='My Logo'/>\n                </div>\n                < div className='general-flex parent-height'>\n                    <NavMenu menuTrigger={menuTrigger}/>\n                    <div className='general-flex' id=\"Interactables\">\n                        <ThemeSwitcher />\n                        <div className='menu toggle' onClick={() => { handleClick() ; handleMenuToggle() ;  }}> \n                            {\n                                !menuTrigger ?\n                                    <div className='parent-height'>\n                                        <div className={`x-mark graphic medium invert ${clicked? 'rotateRight' : 'sideways'}`} onAnimationEnd={handleClick} />\n                                    </div>\n                                    :\n                                    <div className='parent-height'>\n                                        <div className={`x-mark graphic medium invert ${clicked? 'rotateLeft' : 'straight'}`} onAnimationEnd={handleClick} />\n                                        <ScrollLock />\n                                    </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default memo(Header) ;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}